{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"names":["React","CurrentRenderContext","useCurrentRender","_ref","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"sources":["C:/Users/marci/Interpretes-de-Libras-2/node_modules/@react-navigation/core/lib/module/useCurrentRender.js"],"sourcesContent":["import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n//# sourceMappingURL=useCurrentRender.js.map"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD;AACA;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EAC7C,IAAI;IACFC,KAAK;IACLC,UAAU;IACVC;EACF,CAAC,GAAGH,IAAI;EACR,MAAMI,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAACP,oBAAoB,CAAC;EACtD,IAAIM,OAAO,IAAIF,UAAU,CAACI,SAAS,CAAC,CAAC,EAAE;IACrCF,OAAO,CAACG,OAAO,GAAGJ,WAAW,CAACF,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC,CAACH,OAAO;EACtE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}