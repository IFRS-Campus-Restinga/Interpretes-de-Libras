{"ast":null,"code":"export default function getActionFromState(state, options) {\n  var _normalizedConfig$scr;\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n  const routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n  if (routes.length === 0) {\n    return undefined;\n  }\n  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === (normalizedConfig === null || normalizedConfig === void 0 ? void 0 : normalizedConfig.initialRouteName) && routes[1].key === undefined)) {\n    return {\n      type: 'RESET',\n      payload: state\n    };\n  }\n  const route = state.routes[state.index ?? state.routes.length - 1];\n  let current = route === null || route === void 0 ? void 0 : route.state;\n  let config = normalizedConfig === null || normalizedConfig === void 0 ? void 0 : (_normalizedConfig$scr = normalizedConfig.screens) === null || _normalizedConfig$scr === void 0 ? void 0 : _normalizedConfig$scr[route === null || route === void 0 ? void 0 : route.name];\n  let params = {\n    ...route.params\n  };\n  let payload = route ? {\n    name: route.name,\n    path: route.path,\n    params\n  } : undefined;\n  while (current) {\n    var _config, _config2, _config2$screens;\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n    const routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;\n    const route = routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined\n    });\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (routes.length === 2 && routes[0].key === undefined && routes[0].name === ((_config = config) === null || _config === void 0 ? void 0 : _config.initialRouteName) && routes[1].key === undefined) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n    if (route.state) {\n      params.params = {\n        ...route.params\n      };\n      params = params.params;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n    current = route.state;\n    config = (_config2 = config) === null || _config2 === void 0 ? void 0 : (_config2$screens = _config2.screens) === null || _config2$screens === void 0 ? void 0 : _config2$screens[route.name];\n  }\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload\n  };\n}\nconst createNormalizedConfigItem = config => typeof config === 'object' && config != null ? {\n  initialRouteName: config.initialRouteName,\n  screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined\n} : {};\nconst createNormalizedConfigs = options => Object.entries(options).reduce((acc, _ref) => {\n  let [k, v] = _ref;\n  acc[k] = createNormalizedConfigItem(v);\n  return acc;\n}, {});","map":{"version":3,"names":["getActionFromState","state","options","_normalizedConfig$scr","normalizedConfig","createNormalizedConfigItem","routes","index","slice","length","undefined","key","name","initialRouteName","type","payload","route","current","config","screens","params","path","_config","_config2","_config2$screens","Object","assign","initial","screen","createNormalizedConfigs","entries","reduce","acc","_ref","k","v"],"sources":["C:/Users/marci/Interpretes-de-Libras-2/node_modules/@react-navigation/core/lib/module/getActionFromState.js"],"sourcesContent":["export default function getActionFromState(state, options) {\n  var _normalizedConfig$scr;\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n  const routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n  if (routes.length === 0) {\n    return undefined;\n  }\n  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === (normalizedConfig === null || normalizedConfig === void 0 ? void 0 : normalizedConfig.initialRouteName) && routes[1].key === undefined)) {\n    return {\n      type: 'RESET',\n      payload: state\n    };\n  }\n  const route = state.routes[state.index ?? state.routes.length - 1];\n  let current = route === null || route === void 0 ? void 0 : route.state;\n  let config = normalizedConfig === null || normalizedConfig === void 0 ? void 0 : (_normalizedConfig$scr = normalizedConfig.screens) === null || _normalizedConfig$scr === void 0 ? void 0 : _normalizedConfig$scr[route === null || route === void 0 ? void 0 : route.name];\n  let params = {\n    ...route.params\n  };\n  let payload = route ? {\n    name: route.name,\n    path: route.path,\n    params\n  } : undefined;\n  while (current) {\n    var _config, _config2, _config2$screens;\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n    const routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;\n    const route = routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined\n    });\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (routes.length === 2 && routes[0].key === undefined && routes[0].name === ((_config = config) === null || _config === void 0 ? void 0 : _config.initialRouteName) && routes[1].key === undefined) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n    if (route.state) {\n      params.params = {\n        ...route.params\n      };\n      params = params.params;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n    current = route.state;\n    config = (_config2 = config) === null || _config2 === void 0 ? void 0 : (_config2$screens = _config2.screens) === null || _config2$screens === void 0 ? void 0 : _config2$screens[route.name];\n  }\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload\n  };\n}\nconst createNormalizedConfigItem = config => typeof config === 'object' && config != null ? {\n  initialRouteName: config.initialRouteName,\n  screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined\n} : {};\nconst createNormalizedConfigs = options => Object.entries(options).reduce((acc, _ref) => {\n  let [k, v] = _ref;\n  acc[k] = createNormalizedConfigItem(v);\n  return acc;\n}, {});\n//# sourceMappingURL=getActionFromState.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}