{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  let {\n    navigation,\n    focusedListeners\n  } = _ref;\n  const {\n    addListener\n  } = React.useContext(NavigationBuilderContext);\n  const listener = React.useCallback(callback => {\n    if (navigation.isFocused()) {\n      for (const listener of focusedListeners) {\n        const {\n          handled,\n          result\n        } = listener(callback);\n        if (handled) {\n          return {\n            handled,\n            result\n          };\n        }\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(() => addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener), [addListener, listener]);\n}","map":{"version":3,"names":["React","NavigationBuilderContext","useFocusedListenersChildrenAdapter","_ref","navigation","focusedListeners","addListener","useContext","listener","useCallback","callback","isFocused","handled","result","useEffect"],"sources":["C:/Users/marci/Interpretes-de-Libras-2/node_modules/@react-navigation/core/lib/module/useFocusedListenersChildrenAdapter.js"],"sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  let {\n    navigation,\n    focusedListeners\n  } = _ref;\n  const {\n    addListener\n  } = React.useContext(NavigationBuilderContext);\n  const listener = React.useCallback(callback => {\n    if (navigation.isFocused()) {\n      for (const listener of focusedListeners) {\n        const {\n          handled,\n          result\n        } = listener(callback);\n        if (handled) {\n          return {\n            handled,\n            result\n          };\n        }\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(() => addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener), [addListener, listener]);\n}\n//# sourceMappingURL=useFocusedListenersChildrenAdapter.js.map"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE;AACA;AACA;AACA,eAAe,SAASC,kCAAkCA,CAACC,IAAI,EAAE;EAC/D,IAAI;IACFC,UAAU;IACVC;EACF,CAAC,GAAGF,IAAI;EACR,MAAM;IACJG;EACF,CAAC,GAAGN,KAAK,CAACO,UAAU,CAACN,wBAAwB,CAAC;EAC9C,MAAMO,QAAQ,GAAGR,KAAK,CAACS,WAAW,CAACC,QAAQ,IAAI;IAC7C,IAAIN,UAAU,CAACO,SAAS,CAAC,CAAC,EAAE;MAC1B,KAAK,MAAMH,QAAQ,IAAIH,gBAAgB,EAAE;QACvC,MAAM;UACJO,OAAO;UACPC;QACF,CAAC,GAAGL,QAAQ,CAACE,QAAQ,CAAC;QACtB,IAAIE,OAAO,EAAE;UACX,OAAO;YACLA,OAAO;YACPC;UACF,CAAC;QACH;MACF;MACA,OAAO;QACLD,OAAO,EAAE,IAAI;QACbC,MAAM,EAAEH,QAAQ,CAACN,UAAU;MAC7B,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QACLQ,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE;MACV,CAAC;IACH;EACF,CAAC,EAAE,CAACR,gBAAgB,EAAED,UAAU,CAAC,CAAC;EAClCJ,KAAK,CAACc,SAAS,CAAC,MAAMR,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC,OAAO,EAAEE,QAAQ,CAAC,EAAE,CAACF,WAAW,EAAEE,QAAQ,CAAC,CAAC;AAC1I"},"metadata":{},"sourceType":"module","externalDependencies":[]}